порядок загрузки: (bootstrapLoader) -> projInstaller -> bootstrapInstaller -> projLoadState -> hubLoadState:
                  -> miniGame1LoadState
                  -> miniGame2LoadState
                  
загружаю данные launcher в момент загрузки игры. Загрузку производить по меткам.
загрузка данных: projConfig -> hub -> miniGame1
зависимости сборок: ...

TODO:
    загрузка данных. +-
    //подытоживание и рефакторинг!
    сохранение и загрузка прогресса.
    miniGame1 gameplay
    кнопки выгрузки!
    рефакторинг:
        projectLoadData & configs
        более точная настройка ссылок на данные в конфигах. Минимальное использование AssetReference. + возможное использование списков и словарей.
        удаление неиспользуемого кода.
        rename project to global +-
        избавление от глобальной стейт машины ?
        удалить config provider ?
        передавать ссылки на сцены в определённых конфигах 
        почему мини гры знают о hub ? Всё должно быть наоборот!)
    документирование:
        порядок загрузки инсталлеры и стейты
        порядок загрузки ассеты (статические данные)
        порядок загрузки прогресса 
        объяснение: zenject, stateMachine.
        какие ещё аспекты могут быть непонятны ? 

стейты загрузки находятся в Hub, хочу перенести их в соответствующее assemdef-ы но как это сделать ? 
я могу просто перенести стейт загрузки hub в common. думаю, эта здравая идея.